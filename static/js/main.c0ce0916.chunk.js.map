{"version":3,"sources":["components/Vertex.js","App.js","index.js"],"names":["vertexStyle","background","color","padding","borderRadius","handleStyle","transform","visibility","nodeTypes","special","data","style","type","position","text","graphStyle","height","width","borderStyle","vertexIDCounter","App","useState","elements","setElements","selectedEdge","setSelectedEdge","selectedEndpoint","setSelectedEndpoint","onClick","id","toString","newVertex","label","x","y","concat","onNodeDoubleClick","event","node","filter","element","source","target","length","params","stroke","strokeWidth","addEdge","onNodeContextMenu","preventDefault","removeElements","onEdgeMouseEnter","edge","onEdgeMouseLeave","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAEMA,EAAc,CAClBC,WAAY,QACZC,MAAO,QACPC,QAAS,GACTC,aAAc,OAGVC,EAAc,CAClBD,aAAc,GACdE,UAAW,uBACXC,WAAY,UCRRC,EAAY,CAChBC,QDUa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACE,sBAAKC,MAAOX,EAAZ,UACE,cAAC,IAAD,CACEY,KAAK,SACLC,SAAS,MACTF,MAAON,IAET,8BAAMK,EAAKI,OACX,cAAC,IAAD,CACEF,KAAK,SACLC,SAAS,MACTF,MAAON,SCnBTU,EAAa,CACjBC,OAAQ,IACRC,MAAO,IACPC,YAAa,SAGXC,EAAkB,EA4GPC,EA3GH,WACV,MAAkCC,mBAAS,IAA3C,mBAAQC,EAAR,KAAkBC,EAAlB,KACA,EAA0CF,mBAAS,MAAnD,mBAAQG,EAAR,KAAsBC,EAAtB,KACA,EAAkDJ,mBAAS,MAA3D,mBAAQK,EAAR,KAA0BC,EAA1B,KA+EA,OACE,gCACE,gCACE,wBAAQC,QAhFI,WAChB,IAAMC,EAAKV,EAAgBW,WACrBC,EAAY,CAChBF,GAAIA,EACJnB,KAAM,CACJsB,MAAOH,EACPf,KAAMe,GAERjB,KAAM,UACNC,SAAU,CACRoB,EAAG,EACHC,EAAG,IAGPX,EAAYD,EAASa,OAAOJ,IAC5BZ,GAAmB,GAiEf,wBAGA,wBAAQS,QAbQ,WACpBT,EAAkB,EAClBI,EAAY,IACZE,EAAgB,MAChBE,EAAoB,OAShB,sBAIF,qBAAKhB,MAAOI,EAAZ,SACE,cAAC,IAAD,CACEO,SAAUA,EACVd,UAAWA,EACX4B,kBAzEW,SAACC,EAAOC,GACzB,GAAyB,OAArBZ,EAIF,GAAIY,EAAKT,KAAOH,EAAiBG,GAIjC,GAAIP,EAASiB,QAAO,SAACC,GAAD,OAAaA,EAAQC,SAAWf,EAAiBG,IAAMW,EAAQE,SAAWJ,EAAKT,MAAIc,OAAS,EAC9GhB,EAAoB,WAGtB,GAAIL,EAASiB,QAAO,SAACC,GAAD,OAAaA,EAAQC,SAAWH,EAAKT,IAAMW,EAAQE,SAAWhB,EAAiBG,MAAIc,OAAS,EAC9GhB,EAAoB,UADtB,CAKA,IAAMiB,EAAS,CACbH,OAAQf,EAAiBG,GACzBa,OAAQJ,EAAKT,GACbjB,KAAM,WACND,MAAO,CACLkC,OAAQ,eACRC,YAAa,IAGjBnB,EAAoB,MACpBJ,GAAY,SAACD,GAAD,OAAcyB,YAAQH,EAAQtB,WAtBxCK,EAAoB,WAJtBA,EAAoBW,IAwEhBU,kBA1Ca,SAACX,EAAOC,GAC3BD,EAAMY,iBACN1B,GAAY,SAACD,GAAD,OAAc4B,YAAe,CAACZ,GAAOhB,OAyC3CM,QAtCW,SAACS,GACE,MAAhBb,IAEJD,GAAY,SAACD,GAAD,OAAc4B,YAAe,CAAC1B,GAAeF,MACzDG,EAAgB,QAmCV0B,iBAhCqB,SAACd,EAAOe,GACnC3B,EAAgB2B,IAgCVC,iBA7BoB,SAAChB,EAAOe,GAClC3B,EAAgB,eCnFpB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c0ce0916.chunk.js","sourcesContent":["import { Handle } from 'react-flow-renderer'\r\n\r\nconst vertexStyle = {\r\n  background: 'black',\r\n  color: 'white',\r\n  padding: 10,\r\n  borderRadius: '50%'\r\n}\r\n\r\nconst handleStyle = {\r\n  borderRadius: 10,\r\n  transform: 'translate(0px, 25px)',\r\n  visibility: 'hidden'\r\n}\r\n\r\nconst Vertex = ({ data }) => {\r\n  return (\r\n    <div style={vertexStyle}>\r\n      <Handle\r\n        type='source'\r\n        position='top'\r\n        style={handleStyle}\r\n      />\r\n      <div>{data.text}</div>\r\n      <Handle\r\n        type='target'\r\n        position='top'\r\n        style={handleStyle}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Vertex\r\n","import { useState } from 'react'\nimport ReactFlow, { addEdge, removeElements } from 'react-flow-renderer'\n\nimport Vertex from './components/Vertex'\nconst nodeTypes = {\n  special: Vertex\n}\n\nconst graphStyle = {\n  height: 500,\n  width: 500,\n  borderStyle: 'solid'\n}\n\nlet vertexIDCounter = 0\nconst App = () => {\n  const [ elements, setElements ] = useState([])\n  const [ selectedEdge, setSelectedEdge ] = useState(null)\n  const [ selectedEndpoint, setSelectedEndpoint ] = useState(null)\n\n  const addVertex = () => {\n    const id = vertexIDCounter.toString()\n    const newVertex = {\n      id: id,\n      data: {\n        label: id,\n        text: id\n      },\n      type: 'special',\n      position: {\n        x: 0,\n        y: 0\n      }\n    }\n    setElements(elements.concat(newVertex))\n    vertexIDCounter += 1\n  }\n\n  const addNewEdge = (event, node) => {\n    if (selectedEndpoint === null) {\n      setSelectedEndpoint(node)\n      return\n    } else {\n      if (node.id === selectedEndpoint.id) {\n        setSelectedEndpoint(null)\n        return\n      }\n      if (elements.filter((element) => element.source === selectedEndpoint.id && element.target === node.id).length > 0) {\n        setSelectedEndpoint(null)\n        return\n      }\n      if (elements.filter((element) => element.source === node.id && element.target === selectedEndpoint.id).length > 0) {\n        setSelectedEndpoint(null)\n        return\n      }\n\n      const params = {\n        source: selectedEndpoint.id,\n        target: node.id,\n        type: 'straight',\n        style: {\n          stroke: 'rgb(0, 0, 0)',\n          strokeWidth: 3\n        }\n      }\n      setSelectedEndpoint(null)\n      setElements((elements) => addEdge(params, elements))\n    }\n  }\n\n  const deleteVertex = (event, node) => {\n    event.preventDefault()\n    setElements((elements) => removeElements([node], elements))\n  }\n\n  const deleteEdge = (event) => {\n    if (selectedEdge == null) return\n\n    setElements((elements) => removeElements([selectedEdge], elements))\n    setSelectedEdge(null)\n  }\n\n  const initializeDeleteEdge = (event, edge) => {\n    setSelectedEdge(edge)\n  }\n\n  const terminateDeleteEdge = (event, edge) => {\n    setSelectedEdge(null)\n  }\n\n  const clearElements = () => {\n    vertexIDCounter = 0\n    setElements([])\n    setSelectedEdge(null)\n    setSelectedEndpoint(null)\n  }\n\n  return (\n    <div>\n      <div>\n        <button onClick={addVertex}>\n          Add Vertex\n        </button>\n        <button onClick={clearElements}>\n          Clear\n        </button>\n      </div>\n      <div style={graphStyle}>\n        <ReactFlow\n          elements={elements}\n          nodeTypes={nodeTypes}\n          onNodeDoubleClick={addNewEdge}\n          onNodeContextMenu={deleteVertex}\n          onClick={deleteEdge}\n          onEdgeMouseEnter={initializeDeleteEdge}\n          onEdgeMouseLeave={terminateDeleteEdge}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}